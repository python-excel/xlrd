import unittest
from xlrd import xldate


class TestConvertDateTime(unittest.TestCase):
    """
    Test the xldate_as_tuple() function against times extracted from Excel.

    """
    def test_xldate_as_tuple(self):
        # Dates and corresponding numbers from an Excel file.
        excel_seconds = [
            ((0, 0, 0,  0,  0,  0,      0), 0),
            ((0, 0, 0,  0, 15, 20, 213000), 1.0650613425925924E-2),
            ((0, 0, 0,  0, 16, 48, 290000), 1.1670023148148148E-2),
            ((0, 0, 0,  0, 55, 25, 446000), 3.8488958333333337E-2),
            ((0, 0, 0,  1,  2, 46, 891000), 4.3598275462962965E-2),
            ((0, 0, 0,  1,  4, 15, 597000), 4.4624965277777782E-2),
            ((0, 0, 0,  1,  9, 40, 889000), 4.8389918981481483E-2),
            ((0, 0, 0,  1, 11, 32, 560000), 4.9682407407407404E-2),
            ((0, 0, 0,  1, 30, 19, 169000), 6.2721863425925936E-2),
            ((0, 0, 0,  1, 48, 25, 580000), 7.5296064814814809E-2),
            ((0, 0, 0,  2,  3, 31, 919000), 8.5786099537037031E-2),
            ((0, 0, 0,  2, 11, 11, 986000), 9.1110949074074077E-2),
            ((0, 0, 0,  2, 24, 37,  95000), 0.10042934027777778),
            ((0, 0, 0,  2, 35,  7, 220000), 0.1077224537037037),
            ((0, 0, 0,  2, 45, 12, 109000), 0.11472348379629631),
            ((0, 0, 0,  3,  6, 39, 990000), 0.12962951388888888),
            ((0, 0, 0,  3,  8,  8, 251000), 0.13065105324074075),
            ((0, 0, 0,  3, 19, 12, 576000), 0.13833999999999999),
            ((0, 0, 0,  3, 29, 42, 574000), 0.14563164351851851),
            ((0, 0, 0,  3, 37, 30, 813000), 0.1510510763888889),
            ((0, 0, 0,  4, 14, 38, 231000), 0.1768313773148148),
            ((0, 0, 0,  4, 16, 28, 559000), 0.17810832175925925),
            ((0, 0, 0,  4, 17, 58, 222000), 0.17914608796296297),
            ((0, 0, 0,  4, 21, 41, 794000), 0.18173372685185185),
            ((0, 0, 0,  4, 56, 35, 792000), 0.2059698148148148),
            ((0, 0, 0,  5, 25, 14, 885000), 0.22586672453703704),
            ((0, 0, 0,  5, 26,  5, 724000), 0.22645513888888891),
            ((0, 0, 0,  5, 46, 44,  68000), 0.24078782407407406),
            ((0, 0, 0,  5, 48,  1, 141000), 0.2416798726851852),
            ((0, 0, 0,  5, 53, 52, 315000), 0.24574438657407408),
            ((0, 0, 0,  6, 14, 48, 580000), 0.26028449074074073),
            ((0, 0, 0,  6, 46, 15, 738000), 0.28212659722222222),
            ((0, 0, 0,  7, 31, 20, 407000), 0.31343063657407405),
            ((0, 0, 0,  7, 58, 33, 754000), 0.33233511574074076),
            ((0, 0, 0,  8,  7, 43, 130000), 0.33869363425925925),
            ((0, 0, 0,  8, 29, 11,  91000), 0.35360059027777774),
            ((0, 0, 0,  9,  8, 15, 328000), 0.380732962962963),
            ((0, 0, 0,  9, 30, 41, 781000), 0.39631690972222228),
            ((0, 0, 0,  9, 34,  4, 462000), 0.39866275462962958),
            ((0, 0, 0,  9, 37, 23, 945000), 0.40097158564814817),
            ((0, 0, 0,  9, 37, 56, 655000), 0.40135017361111114),
            ((0, 0, 0,  9, 45, 12, 230000), 0.40639155092592594),
            ((0, 0, 0,  9, 54, 14, 782000), 0.41267108796296298),
            ((0, 0, 0,  9, 54, 22, 108000), 0.41275587962962962),
            ((0, 0, 0, 10,  1, 36, 151000), 0.41777952546296299),
            ((0, 0, 0, 12,  9, 48, 602000), 0.50681252314814818),
            ((0, 0, 0, 12, 34,  8, 549000), 0.52371005787037039),
            ((0, 0, 0, 12, 56,  6, 495000), 0.53896406249999995),
            ((0, 0, 0, 12, 58, 58, 217000), 0.54095158564814816),
            ((0, 0, 0, 12, 59, 54, 263000), 0.54160026620370372),
            ((0, 0, 0, 13, 34, 41, 331000), 0.56575614583333333),
            ((0, 0, 0, 13, 58, 28, 601000), 0.58227547453703699),
            ((0, 0, 0, 14,  2, 16, 899000), 0.58491781249999997),
            ((0, 0, 0, 14, 36, 17, 444000), 0.60853523148148148),
            ((0, 0, 0, 14, 37, 57, 451000), 0.60969271990740748),
            ((0, 0, 0, 14, 57, 42, 757000), 0.6234115393518519),
            ((0, 0, 0, 15, 10, 48, 307000), 0.6325035532407407),
            ((0, 0, 0, 15, 14, 39, 890000), 0.63518391203703706),
            ((0, 0, 0, 15, 19, 47, 988000), 0.63874986111111109),
            ((0, 0, 0, 16,  4, 24, 344000), 0.66972620370370362),
            ((0, 0, 0, 16, 22, 23, 952000), 0.68222166666666662),
            ((0, 0, 0, 16, 29, 55, 999000), 0.6874536921296297),
            ((0, 0, 0, 16, 58, 20, 259000), 0.70717892361111112),
            ((0, 0, 0, 17,  4,  2, 415000), 0.71113906250000003),
            ((0, 0, 0, 17, 18, 29, 630000), 0.72117627314814825),
            ((0, 0, 0, 17, 47, 21, 323000), 0.74121901620370367),
            ((0, 0, 0, 17, 53, 29, 866000), 0.74548456018518516),
            ((0, 0, 0, 17, 53, 41,  76000), 0.74561430555555563),
            ((0, 0, 0, 17, 55,  6,  44000), 0.74659773148148145),
            ((0, 0, 0, 18, 14, 49, 151000), 0.760291099537037),
            ((0, 0, 0, 18, 17, 45, 738000), 0.76233493055555546),
            ((0, 0, 0, 18, 29, 59, 700000), 0.77082986111111118),
            ((0, 0, 0, 18, 33, 21, 233000), 0.77316241898148153),
            ((0, 0, 0, 19, 14, 24, 673000), 0.80167445601851861),
            ((0, 0, 0, 19, 17, 12, 816000), 0.80362055555555545),
            ((0, 0, 0, 19, 23, 36, 418000), 0.80806039351851855),
            ((0, 0, 0, 19, 46, 25, 908000), 0.82391097222222232),
            ((0, 0, 0, 20,  7, 47, 314000), 0.83874206018518516),
            ((0, 0, 0, 20, 31, 37, 603000), 0.85529633101851854),
            ((0, 0, 0, 20, 39, 57, 770000), 0.86108530092592594),
            ((0, 0, 0, 20, 50, 17,  67000), 0.86825309027777775),
            ((0, 0, 0, 21,  2, 57, 827000), 0.87705818287037041),
            ((0, 0, 0, 21, 23,  5, 519000), 0.891036099537037),
            ((0, 0, 0, 21, 34, 49, 572000), 0.89918486111111118),
            ((0, 0, 0, 21, 39,  5, 944000), 0.90215212962962965),
            ((0, 0, 0, 21, 39, 18, 426000), 0.90229659722222222),
            ((0, 0, 0, 21, 46,  7, 769000), 0.90703436342592603),
            ((0, 0, 0, 21, 57, 55, 662000), 0.91522756944444439),
            ((0, 0, 0, 22, 19, 11, 732000), 0.92999689814814823),
            ((0, 0, 0, 22, 23, 51, 376000), 0.93323351851851843),
            ((0, 0, 0, 22, 27, 58, 771000), 0.93609688657407408),
            ((0, 0, 0, 22, 43, 30, 392000), 0.94687953703703709),
            ((0, 0, 0, 22, 48, 25, 834000), 0.95029900462962968),
            ((0, 0, 0, 22, 53, 51, 727000), 0.95407091435185187),
            ((0, 0, 0, 23, 12, 56, 536000), 0.96732101851851848),
            ((0, 0, 0, 23, 15, 54, 109000), 0.96937626157407408),
            ((0, 0, 0, 23, 17, 12, 632000), 0.97028509259259266),
            ((0, 0, 0, 23, 59, 59, 999000), 0.99999998842592586),
        ]

        for expected, seconds in excel_seconds:
            got = xldate.xldate_as_tuple(seconds, 0)
            self.assertEqual(got, expected)

if __name__ == '__main__':
    unittest.main()
